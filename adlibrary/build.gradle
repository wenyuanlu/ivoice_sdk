apply plugin: 'com.android.library'

//TODO:在此处修改对应的版本号,打包输出的名称要用到
String VERSION = "1.1.8"
String BASENAME = "com.corpize.sdk.ivoice_V"
String TIME = "_" + releaseTime()

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16 //oaid最低支持21,所以换成21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.init.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {//设置编译的lint开关，程序在buid的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compileOnly 'com.google.code.gson:gson:2.8.6'
    compileOnly 'com.github.bumptech.glide:glide:4.12.0'
    compileOnly 'com.github.bumptech.glide:annotations:4.12.0'
    compileOnly 'com.github.bumptech.glide:okhttp3-integration:4.12.0'
    compileOnly 'com.squareup.okhttp3:okhttp:4.9.1'
}

//修改aar名字+将指定aar生成的地方
task makeAar(type: Copy) {
    from 'build/outputs/aar/Adlibrary-release.aar'
    into 'src/main/outter/aar/' + releaseTime()     //aar包输出路径
    rename { BASENAME + VERSION + TIME + '.aar' }   //最终aar包的名称
}

makeAar.dependsOn(build) //必须写的配置

static def releaseTime() {
    return new Date().format("MMdd_HHmmss", TimeZone.getTimeZone("GMT+08:00"))
}
